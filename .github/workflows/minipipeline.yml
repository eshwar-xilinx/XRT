name: Mini Pipeline

on:     
  pull_request:

jobs:
  vm_creation:
    runs-on: enclave_host
    defaults:
      run:
        working-directory: /home/sdausr/mini_pipeline
        shell: bash
    steps:
    - name: Creating a VM from snapshot on enclave host
      run: |
          sudo ./create_vm.sh
    - name: Attaching Cards to VM
      run: | 
          sudo ./attach_cards.sh

  verification:
    needs: vm_creation
    runs-on: ${{matrix.os}}
    defaults:
      run:
        working-directory: /home/eshwar
        shell: bash
    timeout-minutes: 50
    strategy:
      matrix:
        os: [ u200_18.04, u50_7.8, u250_20.04 ]
      fail-fast: false
    steps:
    - name: build XRT
      run: |
          sudo ./setup.sh
          ./build_xrt.sh ${{github.event.pull_request.number}}
    - name: install XRT
      run: |
          ./install_xrt.sh
    - name: reset card
      timeout-minutes: 5
      run: |
          ./reset_card.sh
    - name: examine card
      if: always()
      timeout-minutes: 5
      run: |
          ./examine.sh
    - name: validate card
      if: always()
      timeout-minutes: 5
      run: |
          ./validate.sh
    - name: drivers reloading
      if: always()
      timeout-minutes: 10
      run: |
          ./stress_drivers.sh
          
  collect_log:
    runs-on: log_collector
    needs: verification
    defaults:
      run:
        shell: bash
        working-directory: /home/eshwar
    if: always()
    steps:
    - name: Setup
      run: ./setup.sh ${{github.event.pull_request.number}}
    - name: Centos78
      uses: actions/upload-artifact@v2
      with:
        name: Centos78
        path: /home/eshwar/centos78
    - name: Ubuntu18
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Ubuntu18
        path: /home/eshwar/ubuntu18
    - name: Ubuntu20
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Ubuntu20
        path: /home/eshwar/ubuntu20
    - name: Clean
      if: always()
      run: |
          echo "Success" > unlock.txt
          sudo cp unlock.txt /mnt/lock
      
